{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "NgxBinaryAngularUiService",
            "id": "injectable-NgxBinaryAngularUiService-da41363e8c0a339965950b14a7f11d83371dc985da17a2241dbd8026db718ba5ee0288ffc5caf92c33003cc1c6106b044113fdc3865050722a9a9605e96e4773",
            "file": "projects/ngx-binary-angular-ui/src/lib/ngx-binary-angular-ui.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxBinaryAngularUiService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-71b8486a2b342d2e72b323ac566fc1d9300048d285eb71955091d81d1249d2e0cbe70b942487bc8f606c1896aa98617a0a602ccc4b97ec899627f557376d0767",
            "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-button>Basic</button>\n<button mat-button color=\"primary\">Primary</button>\n<button mat-button color=\"accent\">Accent</button>\n<button mat-button color=\"warn\">Warn</button>\n<button mat-button disabled>Disabled</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-button',\n  template: `\n    <button mat-button>Basic</button>\n    <button mat-button color=\"primary\">Primary</button>\n    <button mat-button color=\"accent\">Accent</button>\n    <button mat-button color=\"warn\">Warn</button>\n    <button mat-button disabled>Disabled</button>\n  `,\n})\nexport class ButtonComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "NgxBinaryAngularUiComponent",
            "id": "component-NgxBinaryAngularUiComponent-2fba0e7a48db8b9c56301760986a734e7efccb22766686874f3e03160050d247c831f6db896682a4a2a86e187172d98ecb765d0dd0310b6cec9897e4d419169b",
            "file": "projects/ngx-binary-angular-ui/src/lib/ngx-binary-angular-ui.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "binary-ngx-binary-angular-ui",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<p>\n  ngx-binary-angular-ui works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'binary-ngx-binary-angular-ui',\n  standalone: true,\n  imports: [],\n  template: `\n    <p>\n      ngx-binary-angular-ui works!\n    </p>\n  `,\n  styles: ``\n})\nexport class NgxBinaryAngularUiComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        },
        {
            "name": "ThemeComponent",
            "id": "component-ThemeComponent-2100a4263d55df6e59e3b5e20426d5c4592e6a9252e079419bd5dca17a200fe0f95c1218793161a3b402475970c85377a7d8031da2f1cd0f065a84bb1e9330b6",
            "file": "projects/ngx-binary-angular-ui/src/lib/theme/theme.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-theme",
            "styleUrls": [],
            "styles": [
                "\n    /* Define your custom styles here using CSS variables */\n    :host {\n      --primary-color: #00796b;\n      --accent-color: #009688;\n    }\n\n    /* Add more styles as needed */\n  "
            ],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'lib-theme',\n  template: `<ng-content></ng-content>`,\n  encapsulation: ViewEncapsulation.None, // Disable view encapsulation to apply styles globally\n  styles: [`\n    /* Define your custom styles here using CSS variables */\n    :host {\n      --primary-color: #00796b;\n      --accent-color: #009688;\n    }\n\n    /* Add more styles as needed */\n  `],\n})\nexport class ThemeComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    /* Define your custom styles here using CSS variables */\n    :host {\n      --primary-color: #00796b;\n      --accent-color: #009688;\n    }\n\n    /* Add more styles as needed */\n  \n",
            "extends": []
        }
    ],
    "modules": [
        {
            "name": "CustomLibraryModule",
            "id": "module-CustomLibraryModule-a904038488726a1788069101b574c28b9d5258937d4c8dddd71bf0bdce35303188068527aecc00f8e92c8aedf9d79be85182397254aee697616a2a0b0f954b77",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-binary-angular-ui/src/lib/ngx-binary-angular-ui.module.ts",
            "methods": [],
            "sourceCode": "// projects/my-custom-library/src/lib/custom-library.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport '~/theme/styles.scss'; // Import the styles\n\n@NgModule({\n  declarations: [],\n  imports: [MatButtonModule],\n  exports: [MatButtonModule],\n})\nexport class CustomLibraryModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CustomThemeModule",
            "id": "module-CustomThemeModule-136ac3488ef3018b6473aaa372e08923c45f1c43bdd40681abd72ea21ff8dae8335e5e31c9c32b78d77e9ce8268a001b9ce4e5b2dd9341cdd9e2d7a96f72555a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/ngx-binary-angular-ui/src/lib/theme/theme.module.ts",
            "methods": [],
            "sourceCode": "// projects/my-custom-library/src/lib/theme/theme.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  exports: [\n    MatIconModule,\n    MatButtonModule,\n    // Add other Angular Material modules that you want to include in the theme\n  ],\n})\nexport class CustomThemeModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-binary-angular-ui/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "projects/ngx-binary-angular-ui/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-binary-angular-ui/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-binary-angular-ui/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/ngx-binary-angular-ui.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxBinaryAngularUiComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/ngx-binary-angular-ui.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NgxBinaryAngularUiService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-binary-angular-ui/src/lib/theme/theme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}